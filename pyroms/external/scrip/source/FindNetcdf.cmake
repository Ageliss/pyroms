if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
	string(REPLACE ":" " " LIBPATH $ENV{LD_LIBRARY_PATH})
elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
	string(REPLACE ":" " " LIBPATH $ENV{DYLD_LIBRARY_PATH})
endif()

separate_arguments(LIBPATH)

set(Netcdf_FOUND FALSE)
set(Netcdff_FOUND FALSE)
set(Hdf5_FOUND FALSE)
set(Hdf5hl_FOUND FALSE)

foreach(SHLIBPATH ${LIBPATH})
	if (NOT Netcdf_FOUND)
		find_library(Netcdf_LIBRARY ${CMAKE_SHARED_LIBRARY_PREFIX}netcdf${CMAKE_SHARED_LIBRARY_SUFFIX} ${SHLIBPATH})
		if (Netcdf_LIBRARY)
			set(Netcdf_FOUND TRUE)
		endif(Netcdf_LIBRARY)
	endif(NOT Netcdf_FOUND)

	if (NOT Netcdff_FOUND)
		find_library(Netcdff_LIBRARY ${CMAKE_SHARED_LIBRARY_PREFIX}netcdff${CMAKE_SHARED_LIBRARY_SUFFIX} ${SHLIBPATH})
		if (Netcdff_LIBRARY)
			set(Netcdff_FOUND TRUE)
		endif(Netcdff_LIBRARY)
	endif(NOT Netcdff_FOUND)

	if (NOT Hdf5_FOUND)
		find_library(Hdf5_LIBRARY ${CMAKE_SHARED_LIBRARY_PREFIX}hdf5${CMAKE_SHARED_LIBRARY_SUFFIX} ${SHLIBPATH})
		if (Hdf5_LIBRARY)
			set(Hdf5_FOUND TRUE)
		endif(Hdf5_LIBRARY)
	endif(NOT Hdf5_FOUND)

	if (NOT Hdf5hl_FOUND)
		find_library(Hdf5hl_LIBRARY ${CMAKE_SHARED_LIBRARY_PREFIX}hdf5_hl${CMAKE_SHARED_LIBRARY_SUFFIX} ${SHLIBPATH})
		if (Hdf5hl_LIBRARY)
			set(Hdf5hl_FOUND TRUE)
		endif(Hdf5hl_LIBRARY)
	endif(NOT Hdf5hl_FOUND)
endforeach()
